{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport React from \"react\";\nimport StoryblokClient from 'storyblok-js-client';\n\nvar StoryblokService =\n/*#__PURE__*/\nfunction () {\n  function StoryblokService() {\n    _classCallCheck(this, StoryblokService);\n\n    this.devMode = true; // Always loads draft\n\n    this.token = 'UZPSBPAFAsiOubxCwKZ0gQtt';\n    this.client = new StoryblokClient({\n      accessToken: this.token,\n      cache: {\n        clear: 'auto',\n        type: 'memory'\n      }\n    });\n    this.query = {};\n  }\n\n  _createClass(StoryblokService, [{\n    key: \"getCacheVersion\",\n    value: function getCacheVersion() {\n      return this.client.cacheVersion;\n    }\n  }, {\n    key: \"get\",\n    value: function get(slug, params) {\n      params = params || {};\n\n      if (this.getQuery('_storyblok') || this.devMode || typeof window !== 'undefined' && window.storyblok) {\n        params.version = 'draft';\n      }\n\n      if (typeof window !== 'undefined' && typeof window.StoryblokCacheVersion !== 'undefined') {\n        params.cv = window.StoryblokCacheVersion;\n      }\n\n      return this.client.get(slug, params);\n    }\n  }, {\n    key: \"initEditor\",\n    value: function initEditor(reactComponent) {\n      if (window.storyblok) {\n        window.storyblok.init();\n        window.storyblok.on(['change', 'published'], function () {\n          return location.reload(true);\n        }); // this will alter the state and replaces the current story with a current raw story object (no resolved relations or links)\n\n        window.storyblok.on('input', function (event) {\n          if (event.story.content._uid === reactComponent.state.pageContent._uid) {\n            reactComponent.setState({\n              pageContent: window.storyblok.addComments(event.story.content, event.story.id)\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"setQuery\",\n    value: function setQuery(query) {\n      this.query = query;\n    }\n  }, {\n    key: \"getQuery\",\n    value: function getQuery(param) {\n      return this.query[param];\n    }\n  }, {\n    key: \"bridge\",\n    value: function bridge() {\n      if (!this.getQuery('_storyblok') && !this.devMode) {\n        return '';\n      }\n\n      return React.createElement(\"script\", {\n        src: '//app.storyblok.com/f/storyblok-latest.js?t=' + this.token\n      });\n    }\n  }]);\n\n  return StoryblokService;\n}();\n\nvar storyblokInstance = new StoryblokService();\nexport default storyblokInstance;","map":{"version":3,"sources":["/Users/lin/h1-websits-cms/utils/storyblok-service.js"],"names":["StoryblokClient","StoryblokService","devMode","token","client","accessToken","cache","clear","type","query","cacheVersion","slug","params","getQuery","window","storyblok","version","StoryblokCacheVersion","cv","get","reactComponent","init","on","location","reload","event","story","content","_uid","state","pageContent","setState","addComments","id","param","storyblokInstance"],"mappings":";;;AAAA,OAAOA,eAAP,MAA4B,qBAA5B;;IAEMC,gB;;;AACJ,8BAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,IAAf,CADY,CACQ;;AACpB,SAAKC,KAAL,GAAa,0BAAb;AACA,SAAKC,MAAL,GAAc,IAAIJ,eAAJ,CAAoB;AAChCK,MAAAA,WAAW,EAAE,KAAKF,KADc;AAEhCG,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,MADF;AAELC,QAAAA,IAAI,EAAE;AAFD;AAFyB,KAApB,CAAd;AAQA,SAAKC,KAAL,GAAa,EAAb;AACD;;;;sCAEiB;AAChB,aAAO,KAAKL,MAAL,CAAYM,YAAnB;AACD;;;wBAEGC,I,EAAMC,M,EAAQ;AAChBA,MAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;;AAEA,UAAI,KAAKC,QAAL,CAAc,YAAd,KAA+B,KAAKX,OAApC,IAAgD,OAAOY,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,SAA5F,EAAwG;AACtGH,QAAAA,MAAM,CAACI,OAAP,GAAiB,OAAjB;AACD;;AAED,UAAI,OAAOF,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACG,qBAAd,KAAwC,WAA7E,EAA0F;AACxFL,QAAAA,MAAM,CAACM,EAAP,GAAYJ,MAAM,CAACG,qBAAnB;AACD;;AAED,aAAO,KAAKb,MAAL,CAAYe,GAAZ,CAAgBR,IAAhB,EAAsBC,MAAtB,CAAP;AACD;;;+BAEUQ,c,EAAgB;AACzB,UAAIN,MAAM,CAACC,SAAX,EAAsB;AACpBD,QAAAA,MAAM,CAACC,SAAP,CAAiBM,IAAjB;AACAP,QAAAA,MAAM,CAACC,SAAP,CAAiBO,EAAjB,CAAoB,CAAC,QAAD,EAAW,WAAX,CAApB,EAA6C;AAAA,iBAAMC,QAAQ,CAACC,MAAT,CAAgB,IAAhB,CAAN;AAAA,SAA7C,EAFoB,CAIpB;;AACAV,QAAAA,MAAM,CAACC,SAAP,CAAiBO,EAAjB,CAAoB,OAApB,EAA6B,UAACG,KAAD,EAAW;AACtC,cAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,KAA6BR,cAAc,CAACS,KAAf,CAAqBC,WAArB,CAAiCF,IAAlE,EAAwE;AACtER,YAAAA,cAAc,CAACW,QAAf,CAAwB;AAACD,cAAAA,WAAW,EAAEhB,MAAM,CAACC,SAAP,CAAiBiB,WAAjB,CAA6BP,KAAK,CAACC,KAAN,CAAYC,OAAzC,EAAkDF,KAAK,CAACC,KAAN,CAAYO,EAA9D;AAAd,aAAxB;AACD;AACF,SAJD;AAKD;AACF;;;6BAEQxB,K,EAAO;AACd,WAAKA,KAAL,GAAaA,KAAb;AACD;;;6BAEQyB,K,EAAO;AACd,aAAO,KAAKzB,KAAL,CAAWyB,KAAX,CAAP;AACD;;;6BAEQ;AACP,UAAI,CAAC,KAAKrB,QAAL,CAAc,YAAd,CAAD,IAAgC,CAAC,KAAKX,OAA1C,EAAmD;AACjD,eAAO,EAAP;AACD;;AACD,aAAQ;AAAQ,QAAA,GAAG,EAAE,iDAAiD,KAAKC;AAAnE,QAAR;AACD;;;;;;AAGH,IAAMgC,iBAAiB,GAAG,IAAIlC,gBAAJ,EAA1B;AAEA,eAAekC,iBAAf","sourcesContent":["import StoryblokClient from 'storyblok-js-client'\n\nclass StoryblokService {\n  constructor() {\n    this.devMode = true // Always loads draft\n    this.token = 'UZPSBPAFAsiOubxCwKZ0gQtt'\n    this.client = new StoryblokClient({\n      accessToken: this.token,\n      cache: {\n        clear: 'auto',\n        type: 'memory'\n      }\n    })\n\n    this.query = {}\n  }\n\n  getCacheVersion() {\n    return this.client.cacheVersion\n  }\n\n  get(slug, params) {\n    params = params || {}\n\n    if (this.getQuery('_storyblok') || this.devMode || (typeof window !== 'undefined' && window.storyblok)) {\n      params.version = 'draft'\n    }\n\n    if (typeof window !== 'undefined' && typeof window.StoryblokCacheVersion !== 'undefined') {\n      params.cv = window.StoryblokCacheVersion\n    }\n\n    return this.client.get(slug, params)\n  }\n\n  initEditor(reactComponent) {\n    if (window.storyblok) {\n      window.storyblok.init()\n      window.storyblok.on(['change', 'published'], () => location.reload(true))\n\n      // this will alter the state and replaces the current story with a current raw story object (no resolved relations or links)\n      window.storyblok.on('input', (event) => {\n        if (event.story.content._uid === reactComponent.state.pageContent._uid) {\n          reactComponent.setState({pageContent: window.storyblok.addComments(event.story.content, event.story.id)})\n        }\n      })\n    }\n  }\n\n  setQuery(query) {\n    this.query = query\n  }\n\n  getQuery(param) {\n    return this.query[param]\n  }\n\n  bridge() {\n    if (!this.getQuery('_storyblok') && !this.devMode) {\n      return ''\n    }\n    return (<script src={'//app.storyblok.com/f/storyblok-latest.js?t=' + this.token}></script>)\n  }\n}\n\nconst storyblokInstance = new StoryblokService()\n\nexport default storyblokInstance"]},"metadata":{},"sourceType":"module"}